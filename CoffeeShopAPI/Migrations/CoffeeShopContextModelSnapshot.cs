// <auto-generated />
using System;
using CoffeeShopAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeShopAPI.Migrations
{
    [DbContext(typeof(CoffeeShopContext))]
    partial class CoffeeShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeShopAPI.Models.Ingredients.Alcohol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alcohols");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Ingredients.Milk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Milks");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Ingredients.Sauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Ingredients.Supplements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Supplements");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Ingredients.Syrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Syrups");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.CoffeeOrder", b =>
                {
                    b.Property<int>("CoffeeOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlcoholId")
                        .HasColumnType("int");

                    b.Property<int>("CoffeeId")
                        .HasColumnType("int");

                    b.Property<int>("CoffeeSizeId")
                        .HasColumnType("int");

                    b.Property<int>("MilkId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplementsId")
                        .HasColumnType("int");

                    b.Property<int>("SyrupId")
                        .HasColumnType("int");

                    b.HasKey("CoffeeOrderId");

                    b.HasIndex("AlcoholId");

                    b.HasIndex("CoffeeId");

                    b.HasIndex("CoffeeSizeId");

                    b.HasIndex("MilkId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SupplementsId");

                    b.HasIndex("SyrupId");

                    b.ToTable("CoffeeOrders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.DessertOrder", b =>
                {
                    b.Property<int>("DessertOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DessertId")
                        .HasColumnType("int");

                    b.Property<int>("DessertSizeId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplementsId")
                        .HasColumnType("int");

                    b.Property<int>("SyrupId")
                        .HasColumnType("int");

                    b.HasKey("DessertOrderId");

                    b.HasIndex("DessertId");

                    b.HasIndex("DessertSizeId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SupplementsId");

                    b.HasIndex("SyrupId");

                    b.ToTable("DessertOrders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.SandwichOrder", b =>
                {
                    b.Property<int>("SandwichOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SandwichId")
                        .HasColumnType("int");

                    b.Property<int>("SandwichSizeId")
                        .HasColumnType("int");

                    b.Property<int>("SauceId")
                        .HasColumnType("int");

                    b.Property<int>("SupplementsId")
                        .HasColumnType("int");

                    b.HasKey("SandwichOrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SandwichId");

                    b.HasIndex("SandwichSizeId");

                    b.HasIndex("SauceId");

                    b.HasIndex("SupplementsId");

                    b.ToTable("SandwichOrders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.SnackOrder", b =>
                {
                    b.Property<int>("SnackOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SauceId")
                        .HasColumnType("int");

                    b.Property<int>("SnackId")
                        .HasColumnType("int");

                    b.Property<int>("SnackSizeId")
                        .HasColumnType("int");

                    b.Property<int>("SupplementsId")
                        .HasColumnType("int");

                    b.HasKey("SnackOrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SauceId");

                    b.HasIndex("SnackId");

                    b.HasIndex("SnackSizeId");

                    b.HasIndex("SupplementsId");

                    b.ToTable("SnackOrders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.TeaOrder", b =>
                {
                    b.Property<int>("TeaOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MilkId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplementsId")
                        .HasColumnType("int");

                    b.Property<int>("SyrupId")
                        .HasColumnType("int");

                    b.Property<int>("TeaId")
                        .HasColumnType("int");

                    b.Property<int>("TeaSizeId")
                        .HasColumnType("int");

                    b.HasKey("TeaOrderId");

                    b.HasIndex("MilkId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SupplementsId");

                    b.HasIndex("SyrupId");

                    b.HasIndex("TeaId");

                    b.HasIndex("TeaSizeId");

                    b.ToTable("TeaOrders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Coffee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coffees");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Dessert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Desserts");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Sandwich", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sandwiches");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Snack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Snacks");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Tea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teas");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.CoffeeSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoffeeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeId");

                    b.ToTable("CoffeeSizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.DessertSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DessertId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DessertId");

                    b.ToTable("DessertSizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.SandwichSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("SandwichId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SandwichId");

                    b.ToTable("SandwichSizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.SnackSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("SnackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SnackId");

                    b.ToTable("SnackSizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.TeaSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("TeaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeaId");

                    b.ToTable("TeaSizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.CoffeeOrder", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Alcohol", "Alcohol")
                        .WithMany()
                        .HasForeignKey("AlcoholId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Products.Coffee", "Coffee")
                        .WithMany()
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Sizes.CoffeeSize", "CoffeeSize")
                        .WithMany()
                        .HasForeignKey("CoffeeSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Milk", "Milk")
                        .WithMany()
                        .HasForeignKey("MilkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Orders.Order", "Order")
                        .WithMany("CoffeeOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Supplements", "Supplements")
                        .WithMany()
                        .HasForeignKey("SupplementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Syrup", "Syrup")
                        .WithMany()
                        .HasForeignKey("SyrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alcohol");

                    b.Navigation("Coffee");

                    b.Navigation("CoffeeSize");

                    b.Navigation("Milk");

                    b.Navigation("Order");

                    b.Navigation("Supplements");

                    b.Navigation("Syrup");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.DessertOrder", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Products.Dessert", "Dessert")
                        .WithMany()
                        .HasForeignKey("DessertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Sizes.DessertSize", "DessertSize")
                        .WithMany()
                        .HasForeignKey("DessertSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Orders.Order", "Order")
                        .WithMany("DessertOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Supplements", "Supplements")
                        .WithMany()
                        .HasForeignKey("SupplementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Syrup", "Syrup")
                        .WithMany()
                        .HasForeignKey("SyrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dessert");

                    b.Navigation("DessertSize");

                    b.Navigation("Order");

                    b.Navigation("Supplements");

                    b.Navigation("Syrup");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.Order", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.SandwichOrder", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Orders.Order", "Order")
                        .WithMany("SandwichOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Products.Sandwich", "Sandwich")
                        .WithMany()
                        .HasForeignKey("SandwichId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Sizes.SandwichSize", "SandwichSize")
                        .WithMany()
                        .HasForeignKey("SandwichSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Sauce", "Sauce")
                        .WithMany()
                        .HasForeignKey("SauceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Supplements", "Supplements")
                        .WithMany()
                        .HasForeignKey("SupplementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Sandwich");

                    b.Navigation("SandwichSize");

                    b.Navigation("Sauce");

                    b.Navigation("Supplements");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.SnackOrder", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Orders.Order", "Order")
                        .WithMany("SnackOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Sauce", "Sauce")
                        .WithMany()
                        .HasForeignKey("SauceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Products.Snack", "Snack")
                        .WithMany()
                        .HasForeignKey("SnackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Sizes.SnackSize", "SnackSize")
                        .WithMany()
                        .HasForeignKey("SnackSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Supplements", "Supplements")
                        .WithMany()
                        .HasForeignKey("SupplementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Sauce");

                    b.Navigation("Snack");

                    b.Navigation("SnackSize");

                    b.Navigation("Supplements");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.TeaOrder", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Milk", "Milk")
                        .WithMany()
                        .HasForeignKey("MilkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Orders.Order", "Order")
                        .WithMany("TeaOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Supplements", "Supplements")
                        .WithMany()
                        .HasForeignKey("SupplementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Ingredients.Syrup", "Syrup")
                        .WithMany()
                        .HasForeignKey("SyrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Products.Tea", "Tea")
                        .WithMany()
                        .HasForeignKey("TeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShopAPI.Models.Sizes.TeaSize", "TeaSize")
                        .WithMany()
                        .HasForeignKey("TeaSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Milk");

                    b.Navigation("Order");

                    b.Navigation("Supplements");

                    b.Navigation("Syrup");

                    b.Navigation("Tea");

                    b.Navigation("TeaSize");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.CoffeeSize", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Products.Coffee", "Coffee")
                        .WithMany("Sizes")
                        .HasForeignKey("CoffeeId");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.DessertSize", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Products.Dessert", "Dessert")
                        .WithMany("Sizes")
                        .HasForeignKey("DessertId");

                    b.Navigation("Dessert");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.SandwichSize", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Products.Sandwich", "Sandwich")
                        .WithMany("Sizes")
                        .HasForeignKey("SandwichId");

                    b.Navigation("Sandwich");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.SnackSize", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Products.Snack", "Snack")
                        .WithMany("Sizes")
                        .HasForeignKey("SnackId");

                    b.Navigation("Snack");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Sizes.TeaSize", b =>
                {
                    b.HasOne("CoffeeShopAPI.Models.Products.Tea", "Tea")
                        .WithMany("Sizes")
                        .HasForeignKey("TeaId");

                    b.Navigation("Tea");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Orders.Order", b =>
                {
                    b.Navigation("CoffeeOrders");

                    b.Navigation("DessertOrders");

                    b.Navigation("SandwichOrders");

                    b.Navigation("SnackOrders");

                    b.Navigation("TeaOrders");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Coffee", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Dessert", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Sandwich", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Snack", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.Products.Tea", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("CoffeeShopAPI.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
